// <auto-generated />
using System;
using Johnson.Infra.DataStorage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Johnson.Infra.DataStorage.Migrations
{
    [DbContext(typeof(JohnsonDbContext))]
    [Migration("20250417111813_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Johnson.Common.EventAuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EffectedDataId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EventPublishedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LoggedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginService")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Outcome")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("EventAuditLogs");
                });

            modelBuilder.Entity("Johnson.Common.RegistryServiceEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("APIVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHealthy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RegistryServiceEntries");
                });

            modelBuilder.Entity("Johnson.Common.UsedAPIKey", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("UsedAPIKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
